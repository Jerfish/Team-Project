<?php 
//passwordChange.php facilitates changing a user's password during an active 'session'. The password change menu is accessed via index.php and contains two password input fields, old password and new password and one hidden, readonly
//input textbox which contains the currently logged in user based on the username entered during login. When submit is clicked all three values are passed, via post, to this file. passwordChange.php first connects to the database.
//After connecting the file retrieves the current correct password based on the username and checks against the users input 'old password'. If the passwords match then password is updated in the database with whatever value was added
//in 'new password' and the user is redirected to index.php, using session variable authenticated to allow entry. If the passwords did not match the user is still redirected to index with session variable authenticated but no update
//is made in the database. In both cases index.php contains alerts to prompt the user when a password change has been made and whether it was successful, this is achieved using session variables passwordChangeAttempt and passwordChanged
//which 'alert' the system that a password change attempt has been made and whether it was successful. PHP code implemented by Daniel Finch. 

//start a session allowing session variables to be created and passed, utilised when 'retaining' logged in user
session_start();
    
//include the file which contains the database username and password to allow secure access
include "team11-mysql-connect.php";

//declare all database variables used to connect to the database
$dbhost = 'localhost';
$dbname = 'team11project';

//make a connection to the database, based on above variables, and assign this connection to a variable
$conn = mysqli_connect($dbhost, $username, $password, $dbname); 

//ensure the connection is made by creating an error message if the connection fails
if (!$conn) {
    die("Connection failed: " . mysqli_connect_error());
}

//retrieve the input username and password from login.php and assign to variables
$oldPasswordValue = $_POST['oldPassword'];
$newPasswordValue = $_POST['newPassword'];
$usernameValue = $_POST['currentUser']; 

//create an SQL statement to retrieve the password from the database based on the input username
$sql="SELECT Pass FROM Login WHERE user = '".$usernameValue."'"; 

//assign the result of the SQL query on the database to a variable
$result = mysqli_query($conn, $sql);

//format the result of the SQL in a way that allows information to be used, by row
$row = mysqli_fetch_assoc($result);

//assign the password row, should be the only row returned and only one result should be obtained, to a variable
$correctPassword = $row["Pass"];

//if a result is returned check the returned, 'correct', password against the user input password
if($correctPassword == $oldPasswordValue)
{
	//if the passwords match then update the password to the newly retrieved password and alert the user that a change has been succesfully made
	$sql = "UPDATE Login SET Pass = '".$newPasswordValue."' WHERE user = '".$usernameValue."'";
	mysqli_query($conn, $sql);
	$_SESSION['authenticated'] = true;
	$_SESSION['user'] = $usernameValue;
	$_SESSION['passwordChangeAttempt'] = true;
	$_SESSION['passwordChanged'] = true;
	header('location: index.php');
}

//if the password input does not match the password returned based on the username redirect the user to the login page, alert error message
else
{
	$_SESSION['authenticated'] = true;
	$_SESSION['user'] = $usernameValue;
	$_SESSION['passwordChangeAttempt'] = true;
	$_SESSION['passwordChanged'] = false;
	header('location: index.php');
}

//close the connection with the database
mysqli_close($conn);
?>